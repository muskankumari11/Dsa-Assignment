//creating linked list
#include <iostream>
using namespace std;
struct node{
  int data;
  node*next;
};
node*newnode(int val)
{
  node*temp=new node;
  temp->data=val;
  temp->next=NULL;
  return temp;
}
//create a linkedlist
node*createalinkedlist(int n)
{
  int a;
  cin>>a;
  node*head=NULL;
  node*tail=NULL;
  for(int i=0;i<n;i++)
  {
    node*temp=newnode(a);
    if(head==NULL)
    {
      head=temp;
      tail=temp;
    }
    else{
      tail->next=temp;
      tail=temp;
    }
  }
  return head;
}
//print linked list
void printalinkedlist(node*head){
  while(head!=NULL)
  {
    cout<<head->data<<" ";
    head=head->next;
  }
  cout<<"NULL";
}
//merge two sorted linkedlist
node*mergetwosortedlinkedlist(node*head1,node*head2)
{
  if(head1==NULL && head2==NULL){
  if(head1!=NULL)
  {
    return head1;
  }
  return head2;
}
node*newhead=NULL;
node*newtail=NULL;
while(head1!=NULL && head2!=NULL)
{
  node*temp;
  if(head1->data<head2->data){
temp=head1;
head1=head1->next;
}
else{
  temp=head2;
  head2=head2->next;
}
if(newhead==NULL)
{
  newhead=temp;
}
else{
  newtail=temp;
if(newhead==NULL)
{
  if(head1!=NULL)
  {
    newhead=head1;
  }
  else{
    newhead=head2;
  }
}
else{
  if(head1!=NULL){
    newtail->next=head1;
  }
  else{
    newtail->next=head2;
  }
}
return newhead;
int main() {
  int n;
  cin>>n;
  node*head=createalinkedlist(n);
  head=sort(head);
  cout<<"sortedlist";
  printlinkedlist(head);
  return 0;
}
